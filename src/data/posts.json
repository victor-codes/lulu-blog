[{"id":1645630283,"title":"Getting Started with Identity and Access Management (IAM) in AWS","timeZone":"2022-Feb-23T16:31:00","author":"Lulu Nwenyi","publishDate":"Feb 23, 2022","time":"16:31","thumbnail":null,"altText":null,"category":"cloud","subCategory":"AWS","content":"As cloud practitioners, we should be aware of the importance of IAM, as it is used by all cloud service providers. When attempting to perform an action on AWS, you must first go through IAM to identify yourself and whether or not permission to perform that action has been granted.\n\n## What is IAM?\n\nIdentity and Access Management (IAM) is used to secure and control who has access to specific resources and permissions on an account. Organisations can easily manage resources by assigning them to different types of users using IAM. The roles of a Database Administrator and a CyberSecurity Engineer, for example, are different. As a result, the account administrator would use IAM to grant different permissions to each user in order to prevent one from interfering with the other.\n\n## Users, Groups and Roles in AWS IAM\n\nWith AWS, you can create IAM user accounts, user groups and roles for individuals in your organisation. For instance;\n\nIf an organisation, say \"\\*Orange\\*,\" has different departments that need access to its AWS resources, they can be granted access as \\*\\*IAM users\\*\\* and placed in \\*\\*groups\\*\\* with the same permissions based on department or resource type. Administrators, developers, cloud architects, and so on. \n\nIn summary, an IAM user is an entity within an account that has been granted certain permissions to utilise the AWS account's or organisation's resources, whereas IAM user groups are used to provide permissions for a set of IAM users. This makes managing user permissions a little easier.\n\n\\*\\*IAM roles\\*\\*, on the other hand, can be used by \\*Orange\\* to allow access to individuals or programs that require access to its AWS resources. Using roles, access can be granted to people, apps, and services that are not tied with the organisation's AWS account.\n\nAn IAM role is a set of permissions that can be assumed by anyone who requires them. This means that anyone, both inside and outside of an organisation, can take on a role. Because roles do not have long-term security credentials, assuming a role gives you temporary security credentials for your role session.\n\n## How to create an IAM user on AWS\n\nAs a security measure, it is recommended to log in as an IAM user rather than a root user when using cloud services. The root user is the user account created to have access to AWS. Changing account settings/plans or terminating your account, establishing IAM access to the billing and cost management panel, or restoring IAM permissions if unintentionally revoked are just a few of the actions that should be performed as a root user.\n\nTo get started with AWS, you can [create a free-tier account](https://aws.amazon.com/free/?trk=ps_a134p000006pkrzAAA&trkCampaign=acq_paid_search_brand&sc_channel=ps&sc_campaign=acquisition_BEN&sc_publisher=Bing&sc_category=core-main&sc_country=BEN&sc_geo=EMEA&sc_outcome=ACQ&sc_detail=%2Baws&sc_content=Brand_Core_aws_bmm&sc_matchtype=p&sc_segment=&sc_medium=ACQ-P|PS-BI|Brand|Desktop|SU|Core-Main|Core|BEN|EN|Text&ef_id=8b466bcd56ca16301ae90a95c1c3d7f9:G:s&s_kwcid=AL!4422!10!71743287147518!71743730462034&all-free-tier.sort-by=item.additionalFields.SortRank&all-free-tier.sort-order=asc&awsf.Free%20Tier%20Types=*all&awsf.Free%20Tier%20Categories=*all) that allows you to make use of some AWS resources without incurring any charges for a period of 12 months.\n\nThere are a lot of services offered by AWS. To start exploring, [Log in](https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Fconsole%2Fhome%3Ffromtb%3Dtrue%26hashArgs%3D%2523%26isauthcode%3Dtrue%26state%3DhashArgsFromTB_us-east-1_ebf0fab1bbf4def0&client_id=arn%3Aaws%3Asignin%3A%3A%3Aconsole%2Fcanvas&forceMobileApp=0&code_challenge=aNOlpejZzZyWK_phziiMSbsOasDi-zkVdOq7nZ3QaG4&code_challenge_method=SHA-256) to your console as the root user to create an IAM user and group, then select \\*\\*IAM\\*\\* under \"Security, Identity, and Compliance.\"\n\n![](/image/screenshot-2021-10-02-at-18.34.23.png)\n\nSelect users from the IAM dashboard's sidebar and click the option to add a new user. Once you do so, you can start setting up the user's details.\n\n![](/image/screenshot-2021-10-02-at-18.48.08.png)\n\nYou can use a friendly name or a first name as the username when creating an IAM user. It is important to enable both the access key and the password in order for the user to connect AWS via the console, AWS API, and CLI. You can either select to have a password generated for you or create one yourself. We can now set up permissions.\n\n![](/image/screenshot-2021-10-02-at-20.23.04.png)\n\nBecause user permissions may differ, you can attach policies individually to people rather than grouping them. However, if the permissions are all the same, you should create a user group to make things easier in the long term. Then you can proceed by adding tags that contain user details such as job titles or email addresses. This is optional and in most situations, not necessary if you're working as an individual.\n\n![](/image/screenshot-2021-10-02-at-20.45.32.png)\n\nNow that everything is in place, you can review your user permissions and create the IAM user, then navigate to the sign-in page and log in as an IAM user.\n\n## Permissions and Policies in AWS\n\nPolicies are objects that specify an IAM identity's permissions (role, user or group), and are used to manage access in AWS. When you make a request on AWS, it analyses the policies associated with the identity to know if it’s permitted to grant access to that resource. This is what determines whether the request is granted or denied.\n\nPolicies in AWS are classified into Identity-Based Policies, Resource-Based Policies, Permissions Boundaries, Organisational SCPs, Access Control Lists, and Session Policies.\n\nMany of these policies come in JSON format. For instance, identity-based policies are policies you attach to a user or role. Session policies are JSON policy documents attached when a user assumes a role, Resource-based policies are JSON documents you can attach to a resource, and SCPs are JSON policy documents that you attach to an Organization’s organizational unit.\n\nIn AWS, IAM policies have a structure that consists of\n\n* Version — policy language version,\n* id — an optional identifier for the policy,\n* Statement — one or more statements that consist of `sid`, `effect`, `principal`, `action`, `resource`, `condition`.\n\n  * The `sid` is an optional identifier for the statement.\n  * `effect` determines whether the statement allows or denies access to the action. Its value is usually “Allow” or “Deny”.\n  * `principal` states the account, user or role to which this policy is applied.\n  * `action` is the list of actions that this policy allows or denies.\n  * `resource` is the list of resources to which the actions apply.\n  * `condition` is used to state the conditions for when this policy will take effect.\n\nA typical JSON policy in AWS looks like this;\n\n```json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": {\n        \"Effect\": \"Allow\",\n        \"Action\": \\[\n            \"iam:Get\\*\",\n            \"iam:List\\*\",\n            \"iam:Generate\\*\"\n        ],\n        \"Resource\": \"\\*\"\n    }\n}\n```\n\nThis policy above allows an IAM user to have \\*\\*read-only\\*\\* access to the IAM console.\n\n## Wrapping up\n\nUnderstanding the basics of access management is important for everyone that works with cloud service providers, even if you work individually because it’s an amazing way to manage resources on your account, and scale your product/project easier when you need to.\n\nI hope you enjoyed reading this tutorial and found it useful. Feel free to drop questions in the comments, if any.","slug":"getting-started-with-identity-and-access-management-iam-in-aws","tags":"AWS"},{"id":1633619739,"title":"How to build a Twitter bot that tweets every hour with Python and Tweepy","timeZone":"2021-Oct-07T16:15:00","author":"Lulu Nwenyi","publishDate":"Oct 07, 2021","time":"16:15","thumbnail":"/image/twitter-bot.png","altText":"A bot image","category":"Dev","subCategory":"Python","content":"Building a Twitter bot is a simple and very interesting project to take on as a developer. While there’s a wide range of functionalities you can choose from, in this article, I’ll highlight how to build a Twitter bot that makes a tweet, every five minutes. \n\n### Prerequisites:\n\n* Python 3.6+\n* Tweepy\n* Twitter API\n* Heroku\n\n### Getting Twitter API Access\n\nIn my opinion, it’s best you create a twitter account and apply for access before you start project. This would help you test your program efficiently and if your application isn’t approved as soon as it should be, you can sort it out before you’re finished with your project. \n\nTo get your application approved by twitter, you have to ensure your app use case doesn’t violate the policies, and it takes only a few minutes or an hour at most. To apply for access, visit [developer.twitter.com](http://developer.twitter.com).\n\n### Setting up the Directory\n\nGoing over what we would be working on; we’re building an app that sends tweets on its own. For this project, we would be making use of the [iAffirm API](https://github.com/lulunwenyi/iaffirm). This app would make requests to the API to get affirmation messages, pick a random message, create a tweet with the message and then, send the tweet. \n\nFor simplicity, we would structure our app like this: \n\n![iAffirmBot ](/image/iaffirmbot_directory.png \"iAffirmbot_directory\")\n\nOnce this is done, we can setup the environment we would be working in. To create and activate the virtual environment, run the following commands:\n\n```bash\n###### FOR MAC AND LINUX USERS #########\n########################################\n\n##### TO CREATE VIRTUAL ENVIRONMENT ####\n$ python3 -m venv env \n\n##### TO ACTIVATE THE VIRUTAL ENV #######\n$ source env/bin/activate\n\n######## FOR WINDOWS USERS #############\n########################################\n\n##### TO CREATE VIRTUAL ENVIRONMENT ####\n$ py -m venv env\n\n##### TO ACTIVATE THE VIRUTAL ENV #######\n$ .\\env\\Scripts\\activate\n```\n\n### Installing the dependencies\n\nThere are different libraries available for using the twitter api. However, our app is dependent on the Tweepy library. To install Tweepy,\n\n```bash\n$ pip install tweepy\n```\n\nAfter successful installation, we can now add our dependencies to the `requirements.txt` file which is required during deployment. To do this, you can run;\n\n```bash\n$ pip freeze > requirements.txt\n```\n\n### Setting the Environment Variables\n\nTo test our application, we would need to add some environment variables to our `.env` file. These environment variables are tokens/key that we can get from our twitter developer portal. Though, we would have to create a `.gitignore` file to prevent committing the API Keys to the repository. \n\nTo get your API Keys, login to your developer portal and create an app. \n\nAfter creating an app, navigate to your dashboard, then click “Keys and Tokens”. Regenerate and copy your tokens to the `.env` file. Once you retrieve your tokens, the `.env` file should look like this:\n\n```bash\n# FOR MAC/LINUX USERS\nexport API_KEY=your.api.key.goes.here\nexport API_SECRET_KEY=api.secret.key.goes.here\nexport ACCESS_TOKEN=access.token.goes.here\nexport ACCESS_TOKEN_SECRET=access.token.secret.goes.here\n\n# FOR WINDOWS\nset API_KEY=your.api.key.goes.here\nset API_SECRET_KEY=api.secret.key.goes.here\nset ACCESS_TOKEN=access.token.goes.here\nset ACCESS_TOKEN_SECRET=access.token.secret.goes.here\n```\n\n### Configuring our app\n\nWith everything set up, it would be good to try out a test tweet. Let’s try tweeting hello world from our app. In our `main.py` : \n\n```python\n# IMPORT THE LIBRARIES\nimport tweepy\nimport os\n\n# SET UP APP CONFIG\nconsumer_key = os.environ.get('API_KEY')\nconsumer_secret_key = os.environ.get('API_SECRET_KEY')\naccess_token = os.environ.get('ACCESS_TOKEN')\naccess_token_secret = os.environ.get('ACCESS_TOKEN_SECRET')\n\n# TO AUTHORIZE THE APP\nauth = tweepy.OAuthHandler(consumer_key, consumer_secret_key)\nauth.set_access_token(access_token, access_token_secret)\n\n# CREATE API OBJECT\napi = tweepy.API(auth)\n\n# CREATE TWEET\napi.update_status(\"Hello World!\")\n```\n\nTo run the code above, we can set our environment variables in the terminal and start the server by running the command:\n\n```bash\n$ python main.py\n```\n\nIf all went well, we should have a new “Hello World!” tweet on our account. \n\n### Building our bot functions\n\nWe’ve tried out a test tweet, now let’s get to it. \n\nThe first step we’re taking is requesting the affirmation messages in json format from the iAffirm API with the requests library: \n\n```python\n# IMPORT THE LIBRARIES\nimport tweepy\nimport requests\nimport json\nimport os\n\n# SET UP APP CONFIG\nconsumer_key = os.environ.get('API_KEY')\nconsumer_secret_key = os.environ.get('API_SECRET_KEY')\naccess_token = os.environ.get('ACCESS_TOKEN')\naccess_token_secret = os.environ.get('ACCESS_TOKEN_SECRET')\n\n# REQUEST MESSAGES FROM THE API \ndef get_affirmations():\n    response = requests.get('https://iaffirm.herokuapp.com/affirmations').text\n    affirmation = json.loads(response)\n    return(affirmation[\"affirmations\"])\n```\n\nThe next thing we need to define, is the function to pick a message at random from the list that is returned by the `get_affirmations` function. Import the `random` module to your code and create the function:\n\n```python\n# PICK A RANDOM MESSAGE\ndef get_random_affirmation():\n    affirmations = get_affirmations()\n    random_affirmation = random.randint(0, len(affirmations) -1)\n    return (affirmations[random_affirmation]['text'])\n```\n\nNow that we have our functions to get random messages, we can define function to create and send the tweet. \n\n```python\n# CREATE THE TWEET\ndef create_tweet():\n    affirmation = get_random_affirmation()\n    tweet = (affirmation)\n    return tweet\n\n# SEND THE TWEET\ndef tweet_message():\n\n    # AUTHORIZE\n    auth = tweepy.OAuthHandler(consumer_key, consumer_secret_key)\n    auth.set_access_token(access_token, access_token_secret)\n    api = tweepy.API(auth)\n\n    # SEND\n    tweet = create_tweet()\n    api.update_status(tweet + \" #iAffirm\")\n\n# TO RUN THE APP\nif __name__ == \"__main__\":\n     tweet_message()\n```\n\nWith all that code-writing in place, let’s test it! Set your environment variables in the terminal, and run the command:\n\n```bash\n$ python main.py\n```\n\nWhen we check our twitter account, we should have a tweet with your app’s name, like this:\n\n![iAffirmBot twitter image](/image/d522b0c8-1644-411a-80cf-88abf6e60751.jpeg \"iAffirmBot twitter image\")\n\nThough our bot works, we want to set intervals for it. I mean that the aim is to get the bot to tweet every 10 minutes. \n\nTo do this, import the `time` module and make the following additions to our `tweet_message` function:\n\n```python\n# SEND THE TWEET\ndef tweet_message():\n\n    # AUTHORIZE\n    auth = tweepy.OAuthHandler(consumer_key, consumer_secret_key)\n    auth.set_access_token(access_token, access_token_secret)\n    api = tweepy.API(auth)\n\n    # SET INTERVAL IN SECONDS\n    interval = 60 * 10\n    while True: \n\n       # SEND TWEET\n        try: \n          tweet = create_tweet()\n          api.update_status(tweet + \" #iAffirm\")\n          time.sleep(interval)\n\n        # ERROR HANDLER\n        except tweepy.TweepError as e:\n          print(e.reason)\n         \n# TO RUN THE APP\nif __name__ == \"__main__\":\n     tweet_message()\n```\n\nThe error handler is important to prevent the app from crashing. In many cases, it’s possible for random module to pick a tweet that has already been picked. Because there’s a developer policy on duplicate tweets, the bot would throw a `DuplicateError` sometimes. However, the error handler prevents it from crashing the app. \n\nNow, we can run our bot again, to see if it makes another tweet in 10 minutes. \n\n### Deploying our bot to Heroku\n\nYaay! Our app works great. However, we can’t always run our bot in our terminal. We have to deploy our app to Heroku. If you do not already have an account, visit [Heroku.com](http://heroku.com) to create an account. \n\nLogin to your dashboard and create an app. Once you do so, navigate to “Settings” and Reveal Config Vars\" to add your environment variables. Add the key - value pair from your `.env` file one after the other. \n\n![Heroku](/image/screen_shot_2021-08-20_at_12.50.00_pm.png \"heroku\")\n\nAfter the config variables are set up, we can go back to our code editor to create the `Procfile` . This is a file that specifies the commands to be executed by the app. In our `Procfile`, we would declare a worker(background task) that keeps running. To set the worker, \n\n```\nworker: python main.py\n```\n\nOn declaring the worker, you want to make sure your app has all its dependencies in the `requirements.txt` file by running the following command in your terminal.\n\n```bash\n$ pip freeze > requirements.txt\n```\n\nNow, we can proceed with deploy our app from the terminal, with [Heroku CLI](https://devcenter.heroku.com/articles/heroku-cli). If you do not have package on your local computer, you can [download and install](https://devcenter.heroku.com/articles/heroku-cli). \n\nTo get started with the deployment process, in your terminal, run the command:\n\n```bash\n$ heroku login # TO CONNECT TO YOUR ACCOUNT\n```\n\nInitialize a Git repository\n\n```bash\n$ cd my-project\n$ git init\n```\n\nJust like Git, you have to add a remote repository to your local repo, to connect your heroku app with the local repo. To do this, \n\n```bash\n$ heroku git: remote -a <app name>\n```\n\nTo deploy the app, commit your code to the repo and push to heroku using the Git commands:\n\n```bash\n$ git add . \n$ git commit -am \"commit message\"\n$ git push heroku master \n```\n\nIt is important to take note of your branch name when pushing your code. If you already have a remote repository with a different branch name, in place of `master` , use the branch name. \n\nThe last thing we want to do after deploying our app to Heroku is set up a dyno. To keep our worker running:\n\n```bash\n$ heroku scale worker=1\n```\n\nOnce this is done, your twitter account should have a new tweet. If your app doesn’t create a new tweet, it means the same worker wasn’t scaled properly. To run it manually, you can use the command;\n\n```bash\n$ heroku run worker\n```\n\n…and Viola!!! We’ve built and deployed a twitter bot to make tweets every 10 minutes.\n\n### Conclusion\n\nIn this article, I made use of the [iAffirm API](https://github.com/lulunwenyi/iaffirm) which I built, but you can create a list of messages or quotes as dictionaries in your python app. As previously mentioned, there are tons of available use cases for twitter bots that you can and should definitely try. \n\nYou can find the complete code on GitHub [here](https://github.com/lulunwenyi/iAffirmBot).\n\nI hope you enjoyed reading this tutorial and found it useful. Feel free to drop any questions in the comments, and if you would like to show your support by sponsoring, you can [buymeacoffee](https://buymeacoffee.com/lulunwenyi).","slug":"how-to-build-a-twitter-bot-that-tweets-every-hour-with-python-and-tweepy","tags":"Python, Bot","description":"How to build a Twitter bot that tweets every hour with Python and Tweepy"},{"id":1629831546,"title":"Choosing Font Pairs Like a Pro","timeZone":"2021-Aug-24T19:59:00","author":"Lulu Nwenyi","publishDate":"Aug 24, 2021","time":"19:59","thumbnail":null,"altText":null,"category":"Design","subCategory":"UI&UX","content":"Choosing a great font pair is just like picking a great outfit. There’s a wide range to choose from but we have to consider the occasion because there are special outfits, for special occasions.\n\nOne of the major problems I’ve faced as a product designer is font pairing. In some cases, I’ve had to reiterate and create over 5 variations of font pairs to work with. In this article, I highlight the importance of font pairing and tips to match font pairs that work well with each other for a better User Experience.\n\n## The importance of proper font pairing\n\nFont choices set the overall look and feel of a design and selecting the right fonts can mean the difference between a compelling, attractive design, and a boring lifeless one. Here’s why: \n\n### 1. To improve contrast and make the text visually interesting\n\nThe whole point of pairing fonts is for contrast. Creating contrast in fonts makes it easier for your users to read and differentiate parts of the text like heading and body. Contrasting fonts also help to catch attention more and make your designs visually interesting. \n\n### 2. Convey the right message and emotion\n\nFont choices are a great influence on people’s emotions and thoughts when reading a piece of text. For example, you’re likely to read the texts in the image below, differently. \n\n![A6 type face](/image/a6_-_1.png)\n\n[Studies](https://affect.media.mit.edu/pdfs/05.larson-picard.pdf) have revealed that line spacing, book dimensions, and layouts play a huge role in the emotions of a person while reading. It is also noted that script fonts stimulate feelings of humor or love and serif fonts inspire a feeling of maturity. Therefore, to convey the right message in our design, considerable font pairing is vital.\n\n### 3. Ensure readability and legibility\n\nIt’s also very important to make sure your users can read texts clearly and easily. Your choice of font family, style, colour, size, line-height, and weight, can all affect the legibility, readability, accessibility, and general UX of your design. \n\nFor instance, script fonts or texts styled in Italics affect user readability because the texts are slanted. Therefore, it’s a good idea to minimalize the use of slanting font styles. \n\nAnother good example is the use of line-height. Spacing is just as important as words. To improve readability it’s important to prevent jam-packing your sentences together.\n\n## 7 Best Practices for Choosing Great Font Pairs\n\nUnderstanding why great font pairing is important is one thing, knowing how to put it into practice is another and sometimes, we just need a few tips to put us on. To choose better font pairs, below are a few tips to put into practice.\n\n### 1. Use contrasting font weights.\n\nMaking use of varying font weights is a great way to ensure visual hierarchy and clear difference. It’s a much better combination to match a **Bold Montserrat** with **Montserrat Regular** than to match **Montserrat Bold** with its **Semibold**. It’s important to understand that matching font weights can be compared with matching people. When two hotheaded people are matched, it’s very likely for a clash to occur. In the same sense, when two heavy fonts are matched, there will be a clash. \n\n![Raleway ](/image/2.png)\n\nFor harmony, it’s better to practice making use of a heavy and lighter or neutral font-weight. \n\n### 2. Create contrast with font sizes.\n\nAnother way to achieve contrast is by making use of varying font sizes. This helps with a better layout, visual hierarchy, and distinguishing what’s most important to the user. For instance;\n\n![Raleway header](/image/3.png)\n\n### 3. Use only a maximum of 2/3 typefaces.\n\nMaking use of more than two or three fonts is one mistake you do not want to make. It gives room for inconsistency. Instead of overthinking it, stick to a combination of two typefaces and work with contrasts to keep it simple and consistent.\n\n### 4. Pair a Serif font with Sans-Serif.\n\nThis is one of the safest, yet powerful, combos in the world of typography and design. Serif fonts are typefaces with a small line attached to the end of each stroke of a letter, while Sans-Serif fonts are those that don’t have these attachments. \n\n![Blog home page](/image/screen_shot_2021-08-23_at_10.52.26_pm.png)\n\nCreating a font pair from these families is a great way to include contrast in your design. However, it’s important to stay away from fonts that are too different to prevent the creation of conflict instead of contrast. Examples of amazing pairs include: \n\n* Unna(Serif) and Inter(Sans-Serif)\n* Cabinet Grotesk(Sans-Serif) and Gambetta(Serif)\n\n### 5. Assign roles to each font.\n\nThe importance of consistency in design cannot be overemphasized. Another way to ensure consistency in design is by using specific fonts for specific things. For example, in the image below, the font, sans-serif …. is used as a header,  and ….., serif font is used for body text. This gives the user a heads-up when they come across text pieces in your design. \n\n### 6. Use typefaces with a big font family.\n\nUsing typefaces with a large family allows the range to be sufficient. The work of pairing and hierarchy is done for you because there’s a variety of font styles you can choose from. For Instance, **Alegreya**. \n\n![Screen Shot 2021-08-23 at 8.21.08 PM.png](/image/screen_shot_2021-08-23_at_8.21.08_pm.png)\n\n### 7. Determine your brand’s emotions to avoid a mix.\n\nAs I mentioned earlier, font choices have a certain influence on the emotions of readers. To prevent a mix of emotions, you must choose a font that defines your brand’s emotion to a great extent. This improves readability and clarity for user experience. \n\n## Summing it up\n\nChoosing font pairs is not only relatable to designers. It’s a great skill for anyone because it comes to play in many situations such as creating a resume, presentation, or even a document. Although as designers, it’s very important to know and understand how to choose font pairs because it determines the quality of work we deliver and its user experience. \n\nI hope you enjoyed reading this article and found it useful. Feel free to drop any questions in the comments, and if you would like to show your support by sponsoring, you can [buymeacoffee](https://buymeacoffee.com/lulunwenyi).","slug":"choosing-font-pairs-like-a-pro","tags":" UI, Font Pairing","description":"Choosing a great font pair is just like picking a great outfit. There’s a wide range to choose from but we have to consider the occasion because there are special outfits, for special occasions.\n\nOne of the major problems I’ve faced as a product designer is font pairing. In some cases, I’ve had to reiterate and create over 5 variations of font pairs to work with. In this article, I highlight the importance of font pairing and tips to match font pairs that work well with each other for better User Experience."},{"id":1629227316,"title":"Adding downloadable files in a Flask App","timeZone":"2021-Aug-17T20:08:00","author":"Lulu Nwenyi","publishDate":"Aug 17, 2021","time":"20:08","thumbnail":null,"altText":null,"category":"Dev","subCategory":"Flask","content":"Sometimes, you might want to have users download a file or report in pdf, txt, excel, app, etc, from your application. In many of the flask tutorials I’ve seen, serving and allowing users download files are not covered. In this article, I will be highlighting how to build a simple app that allows you download files from a Flask Application. \n\n### Prerequisites:\n\n* Python 3.6 or above. Learn [why](https://flask.palletsprojects.com/en/0.12.x/python3/)\n* Flask\n\n### Setting up the directory\n\nEven if Flask does not require a specific organization, for this tutorial, we’ll structure our app like this: \n\n![download_app_directory.png](Adding%20downloadable%20files%20in%20a%20Flask%20App%2027fe9468f94f43719831f4db2b5c7010/download_app_directory.png)\n\nOnce this is setup, we can create a virtual environment and install the dependencies —*Flask.* \n\nTo create a virtual environment, you can run the following in the terminal:\n\n```bash\n###### FOR MAC AND LINUX USERS #########\n########################################\n\n##### TO CREATE VIRTUAL ENVIRONMENT ####\npython3 -m venv env \n\n##### TO ACTIVATE THE VIRUTAL ENV #######\nsource env/bin/activate\n\n######## FOR WINDOWS USERS #############\n########################################\n\n##### TO CREATE VIRTUAL ENVIRONMENT ####\npy -m venv env\n\n##### TO ACTIVATE THE VIRUTAL ENV #######\n.\\env\\Scripts\\activate\n```\n\nTo install Flask, after activating the virtual environment, run the command: \n\n```bash\npip install Flask\n```\n\nIn many cases, you would need a `requirements.txt` file in your directory when deploying your flask app. To add all your installations, run the command;\n\n```bash\npip freeze > requirements.txt\n```\n\nNow that our directory is setup, we can create our app and routes in the `app.py` file.\n\n### Configuring the routes\n\nTo enable your app return a file, we have to set a route that gets the file and posts it to the user, as an attachment, when they click a download button. To represent this in code;\n\n```python\n###### TO IMPORT THE DEPENDENCIES #####\n\n###### TO IMPORT THE DEPENDENCIES #####\n\nfrom flask import Flask, render_template, url_for, send_file\nfrom werkzeug.exceptions import abort\n\napp = Flask(__name__)\n\n###### FILE TO BE DOWNLOADED #########\npath = \"trialdoc.pdf\"\n\n###### HOME PAGE ########\n@app.route('/')\ndef index():\n     \n    return render_template('index.html')\n\n###### DOWNLOAD ROUTE #######\n@app.route('/download', methods=['GET', 'POST'])\ndef return_file():\n    try:\n        return send_file(path, as_attachment=True)\n\n    except FileNotFoundError:\n        abort(404)\n\nif __name__ == '__main__':\n     app.run(debug=True) # set debug to false before deploying.\n```\n\nNow that our routes have been configured, let’s setup the simple html page that we would be downloading our document from;\n\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Home</title>\n    </head>\n\n    <!---------BODY -------->\n    <body>\n\n        <h1> Get my free e-book! </h1>\n        <p>Click the download button to continue.</p>\n\n        <br>\n\n        <a href=\"{{ url_for ('return_file')}}\">\n        <button> Download the free book! </button>\n        </a>\n\n    </body>\n</html>\n```\n\nWith our template and flask app all set up, we can test if it works. To start a flask app, you have to set its environment variables. \n\n```bash\n###### FOR MAC/LINUX USERS ####### \nexport FLASK_APP=app.py\nflask run\n\n######## FOR WINDOWS USERS #######\nset FLASK_APP=app.py\nflask run\n```\n\nOnce this is run, the following should be displayed in your terminal:\n\n```bash\n * Serving Flask app 'app.py' (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n```\n\nYou can copy the link `[http://127.0.0.1:5000/](http://127.0.0.1:5000/)` and paste to your browser. Your output should look like:\n\n![get a free ebook ](/image/screen_shot_2021-08-17_at_9.53.22_am.png)\n\n### **Conclusion**\n\nViola! You can now click the download button to get your document. This article has highlighted the simple method you can use to download files from a flask app, even in API use cases. You can find the code on GitHub [here](https://github.com/LuluNwenyi/Adding-Flask-Downloads-Tutorial).\n\nI hope you enjoyed reading this tutorial and found it useful. Feel free to drop any questions in the comments, and if you would like to show your support by sponsoring, you can [buymeacoffee](https://buymeacoffee.com/lulunwenyi).","slug":"adding-downloadable-files-in-a-flask-app","tags":"Python, Flask","description":"Sometimes, you might want to have users download a file or report in pdf, txt, excel, app, etc, from your application. In many of the flask tutorials I’ve seen, serving and allowing users download files are not covered. In this article, I will be highlighting how to build a simple app that allows you download files from a Flask Application."},{"id":1625683465,"title":"10 Tips to Relieve Mental Stress","timeZone":"2021-Jul-07T19:44:00","author":"Lulu Nwenyi","publishDate":"Jul 07, 2021","time":"19:44","thumbnail":null,"altText":null,"category":"Psych","subCategory":"Tips","content":"# 10 Tips to Relieve Mental Stress\n\nStress is a very overwhelming feeling that nobody escapes. It’s also a method of response for your body to threats and some kinds of demand. This response method is also your body’s way of protecting you. As long as it is working properly, stress can help you stay focused and alert. It can boost your memory and help you accomplish tasks efficiently.\n\nStress is beneficial for well-living but when it’s too much, it can be detrimental. It’s just like when you try to stand on one foot. Your body is likely to be shaky because you need both legs to be balanced. If you find yourself often feeling exhausted and overwhelmed, then you need to bring yourself back to balance. To help get this balance, here are a few tips you should try;\n\n**1. Exercise**\n\nExercise is very important, especially when it comes to relieving stress. If you exercise regularly, the physical stress through exercise can help relieve mental stress. This is because exercise can help reduce stress hormones and release new chemicals (endorphins) that act as natural painkillers and mood boosters. Exercise also improves the quality of your sleep and your self-confidence — which contributes to your mental well-being.\n\n**2. Reduce caffeine intake**\n\nCaffeine is said to be the most commonly used drug in the world. It’s a stimulant mostly found in coffee, tea, energy drinks, chocolate and some drugs, to help stay awake, improve focus or reduce tiredness.\n\nWe react to caffeine on different levels. Some people are extremely sensitive to caffeine and it is said to cause anxiety when they consume it. Consuming caffeine can be healthy but a high intake of caffeine, regardless of how sensitive you are, can cause headaches, anxiety, insomnia, stress and many other physical and mental health issues.\n\n**3. Aromatherapy**\n\nThis is one of my personal favourites. Do you have those days when you decide to have scented candle lit while listening to lo-fi music in a dark room? It’s all part of it.\n\nAromatherapy is widely practised in India and China. It is a method of treatment that uses natural extracts from plants to enhance physical and mental well-being. It can also be referred to as essential oil therapy.\n\nAromatherapy works through our sense of smell and skin absorption. Sometimes, when I have a headache, I rub lavender oil and just rest for a while. It’s extremely soothing and has an amazing scent, so I prefer that method to painkiller tablets. Aromatherapy also helps to improve your sleep and reduce stress and anxiety. If you would like to try aromatherapy, here are some scents I recommend:\n\n- Lavender\n- Rose\n- Sandalwood\n- Frankincense\n- Jasmine\n- Chamomile\n- Eucalyptus\n\n**4. Interact and spend more time with friends and family**\n\nStudies have found that people who have very few social relationships and connections are more likely to suffer from anxiety and depression. Every day, I find myself being thankful for my friends. They bring joy to me and support me as much as they can.\n\nSpending time with people who make you happy is a very good way to relieve yourself of stress and anxiety.\n\n**5. Practice journaling**\n\nJournaling is a very therapeutic exercise. Writing how you feel in a journal helps you gain clarity on the source of your anxiety and tackling it. It’s also a very good way to relieve mental stress.\n\nWhile you’re at it, keep recordings of what you’re grateful for. This helps you focus your thoughts on the positive and that might be the realization you need.\n\n**6. Practice mindfulness**\n\nMindfulness is the ability to focus your attention on the present and accept it without any judgement. This helps you to slowly get rid of negative thinking and relieves anxiety. Mindfulness improves your physical and mental health. Some of the best ways to practice mindfulness include; yoga, meditation and therapy.\n\n**7. Listening to music**\n\nMusic can be very relaxing to the mind and body. Music with slow-paced instrumentals and lo-fi beats can help the body relax by lowering the blood pressure and heart rate to reduce the stress hormones. They are also calming and this is why we see people use them in study or meditation sessions.\n\n**8. Breathing Exercises**\n\nTaking a deep breath is another method to control your body’s relaxation response. It helps you to focus your attention on your breathing, making it slower and deeper. This lowers your heart rate and blood pressure to allow you to feel calmer.\n\n**9. Physical Intimacy**\n\nCuddles, hugs, kisses and sex are also good ways to relieve stress. Physical intimacy causes the release of oxytocin that help lower blood pressure and heart rate. This reduces stress and anxiety effectively. It has also been found in studies that having healthy sex is important to live a healthy life.\n\n**10. Avoid Procrastination**\n\nDisorganization is one of the easiest ways to get stressed. To control this, you should work with priorities and stop procrastinating.\n\nWhen you procrastinate, you might have to act impulsively and end up hurrying to finish up work. This can reduce your sleep quality and cause a physical or mental breakdown. To avoid these, maintain a habit of making to-do lists, priorities and plans for the day.\n\nStress is inevitable but to prevent permanent damage, we must find ways to relieve ourselves of stress. This will help you boost your immune system, increase productivity, improve your mood, sleep quality and overall lifestyle.","slug":"10-tips-to-relieve-mental-stress","tags":"Productivity","description":"Stress is a very overwhelming feeling that nobody escapes. It’s also a method of response for your body to threats and some kinds of demand. This response method is also your body’s way of protecting you. As long as it is working properly, stress can help you stay focused and alert. It can boost your memory and help you accomplish tasks efficiently."},{"id":1623783112,"title":"GUI Programming with Tkinter in Python","timeZone":"2021-Jun-15T19:51:00","author":"Lulu Nwenyi","publishDate":"Jun 15, 2021","time":"19:51","thumbnail":null,"altText":null,"category":"Dev","subCategory":"Python","content":"Imagine our computers didn’t have GUIs and had to be operated using the command line. Seems tragic and mentally exhausting. GUIs are found on every operating system to aid communication between the user and the computer. Python provides various options for developing Graphical User Interfaces (GUIs). However, the most common ones include: \n\n* Tkinter\n* Kivy\n* PySimpleGUI\n* wxPython and many more..\n\nIn this article, I’ll take you through the basics of  **Tkinter** to help you get started with Developing GUIs. \n\n### What is a GUI?\n\nA Graphical User Interface displays elements or objects that represent the actions taken by users. Basically, it allows the communication between you, the user, and the software. GUIs make use of elements such as texts, buttons, icons, images, etc\n\nIn python, there are different frameworks available for developing GUIs. However, the most commonly used is known as Tkinter. \n\n## Getting started with Tkinter\n\nTkinter is the go-to tool for python developers when it comes to developing GUIs because it is a very fast and easy system for developing programs. Though the Tkinter framework comes with Python Package installers, the latest version of Python still remains an exception. \n\n### How to set up Tkinter for Python 3.9\n\nSetting up Tkinter is primarily done via the command-line interface, which we can access with our system terminals. \n\nIf you are using Windows, for a detailed Tkinter install instructions, check out this blog post: \n\n[How to install Tkinter in Python?](https://www.tutorialspoint.com/how-to-install-tkinter-in-python)\n\nFor MacOS with Homebrew, here’s a simple guide: \n\nBefore beginning this process, start up your terminal and ensure your python version is at 3.9 by typing the command: \n\n```bash\npython --version\n```\n\nOnce that’s done, run the command: \n\n```bash\nbrew install python-tk@3.9\n```\n\nThis command should install Tkinter in a few seconds. To verify the installation process was successful and Tkinter is ready for use, start up your python shell and run the following commands: \n\n```python\nimport tkinter\nimport _tkinter\ntkinter._test()\n```\n\nWhen you enter these commands, a test GUI should appear on your screen like this: \n\n![terminal](/image/97b90dfc-92bb-4122-b4ef-fe026cb1f42e.jpeg)\n\n### Using widgets in Tkinter\n\nA widget is an element of the GUI that displays information for the user and software to interact. In Tkinter, this means that the button, frame, menu, etc on the GUI are simply called widgets. \n\nThe algorithm for building a GUI in Tkinter involves 4 main procedures: \n\n1. Import the Tkinter module.\n2. Create the GUI application’s main window.\n3. Create and add widgets to the window.\n4. Enter the main loop to allow the application take action. \n\nWith this algorithm, the structure of your code should look like this: \n\n```python\nfrom tkinter import *\n\n# ----- To create main window -------\nwindow = Tk()\nwindow.geometry(\"200x150\") #to set size\n\n# ----- Enter widget codes here ------\n# ------ using a button as example ----\n\nbtn= Button(window, text='Say Hello!')\nbtn.pack()\n\n# ----- The main loop -----\nwindow.mainloop()\n```\n\nThe code above, if written correctly, should give the output as:\n\n![window pop up](/image/0af5277f-762d-4b49-abcc-888663a9445b.png)\n\nIn Tkinter, there are different widgets available for use. Some of the most common include: \n\n1. `Frame` : A frame is used as a container to hold different widgets. \n\nSyntax:\n\n`My_frame = Frame(options)` where options are configurations for the Frame. \n\nFor instance: \n\n```python\nfrom tkinter import *\n\n#------- our window ------\nroot = Tk()\nroot.geometry('300x300')\n\n#------ our widget ------\nbox_1 = Frame(bg= \"#1687F0\", width=100, height=100)\nbox_1.pack()\n\nroot.mainloop()\n```\n\n1. `Button` : This is used to add buttons to the GUI window, so the user can interact with your program. \n\nSyntax:\n\n`btn  = Button(options)` where options are configurations for the widget.\n\nFor instance:\n\n```python\nfrom tkinter import *\n\n#------- our window ------\nroot = Tk()\nroot.geometry('300x300')\n\n#------- our widget ------\nbtn = Button(text= \"Click Me\",fg=\"black\")\nbtn.pack()\n\nroot.mainloop()\n```\n\n1. `Label` : A label is used to display text on the GUI window. \n\nSyntax:\n\n`My_label = Label(options)` where options are configurations for the widget.\n\nFor instance:\n\n```python\nfrom tkinter import *\n\n#------- our window ------\nroot = Tk()\nroot.geometry('300x300')\n\n#------- our widget ------\nmy_label = Label(text= \"Hello World!\",fg=\"black\", bg= \"blue\")\nmy_label.pack()\n\nroot.mainloop()\n```\n\n1. `Entry` : It is used to collect data or allow input from users on the window. \n\nSyntax:\n\n`My_input = Entry(options)` where options are configurations for the widget.\n\nFor instance:\n\n```python\nfrom tkinter import *\n\n#------- our window ------\nroot = Tk()\nroot.geometry('300x300')\n\n#------- our widget ------\ninput_1 = Entry(width=10)\ninput_1.pack()\n\nroot.mainloop()\n```\n\n1. `Checkbutton` : This allows users select more than one option from a set of options. \n\nSyntax: \n\n`my_list = Checkbutton(options)` where options are configurations for the widget.\n\nFor instance:\n\n```python\nfrom tkinter import *\n\n#------- our window ------\nroot = Tk()\nroot.geometry('300x300')\n\n#------ our options ------\nvar_1 = IntVar()\nvar_2 = IntVar()\n\n#------- our widget ------\nc_btn = Checkbutton(text = \"Banana\", variable= var_1)\nc_btn.pack()\n\nc_btn2 = Checkbutton(text = \"Mango\", variable= var_2)\nc_btn.pack()\n\nroot.mainloop()\n```\n\n1. `Radiobutton` : A radiobutton allows users select only one option from a set of predefined options. \n\nSyntax: \n\n`r_btn = Radiobutton(options)` where options are configurations for the widget. \n\nFor instance:\n\n```python\nfrom tkinter import *\n\n#------- our window ------\nroot = Tk()\nroot.geometry('300x300')\n\n#------ our variable ------\nvar = IntVar()\n\n#------- our widget ------\nr_btn = Radiobutton(variable = var, text = \"Option_1\", value = 1)\nr_btn.pack()\n\nr_btn2= Radiobutton(variable = var, text = \"Option_2\", value = 2)\nr_btn2.pack()\n\nroot.mainloop()\n```\n\n1. `Canvas` : A canvas is used to draw pictures, graphs etc.. or display images and text.\n\n`my_canvas = Canvas(options)` where options are configurations for the widget.  \n\nFor instance:\n\n```python\nfrom tkinter import *\n\n#------- our window ------\nroot = Tk()\nroot.geometry('300x300')\n\n#------- our widget ------\nmy_canvas = Canvas(width= 250, height= 200, bg=\"#000000\")\nmy_canvas.pack()\n\nroot.mainloop()\n```\n\n1. `Combobox` : This displays a drop down list of options, one by one, for users to select from. \n\nSyntax:\n\n`My_list = ttk.Combobox(options)` where options are configurations for the widget.\n\nFor instance:\n\n```python\nfrom tkinter import * \n\nwindow = Tk()\n\nvlist = [\"Option1\", \"Option2\", \"Option3\",\n          \"Option4\", \"Option5\"]\n \nCombo =ttk.Combobox(values = vlist)\nCombo.set(\"Pick an Option\")\nCombo.pack()\n\nwindow.mainloop()\n```\n\n1. `Listbox` : This widget is used to display a list of options for the user to select from, in text format. \n\nSyntax:\n\n`My_list = Listbox(options)` where options are configurations for the widget.\n\nFor instance:\n\n```python\nfrom tkinter import * \n\nwindow = Tk()\n\nvlist = [\"Option1\", \"Option2\", \"Option3\",\n          \"Option4\", \"Option5\"]\n \nlist_box =Listbox(window)\nlist_box.insert(1, \"Mango\")\nlist_box.insert(2, \"Banana\")\n\nlist_box.pack()\n\nwindow.mainloop()\n```\n\n1. `Menu` : It is used to create top level and other types of menu in the GUI window. \n\n`my_menu = Menu(options)` where options are configurations for the widget.\n\n For instance:\n\n```python\nfrom tkinter import *\n  \nroot = Tk() \nroot.geometry(\"300x200\") \n  \nmainmenu = Menu(root)\nmainmenu.add_command(label = \"Home\", command= home)  \nmainmenu.add_command(label = \"Save\", command= save)\nmainmenu.add_command(label = \"Exit\", command= root.destroy)\n \nroot.config(menu = mainmenu)\n    \nroot.mainloop()\n```\n\n1. `Menubutton` : This is a combination of the button and menu widgets. It is a button that displays a drop-down menu when clicked. It also allows you nest check buttons and radiobuttons inside the menu. \n\n`My_menu = Menubutton(options)` where options are configurations for the widget.\n\nFor instance:\n\n```python\nfrom tkinter import *\n  \nroot = Tk() \nroot.geometry(\"300x200\") \n  \nmenubutton = Menubutton(root, text = \"Menu\")    \n    \nmenubutton.menu = Menu(menubutton)   \nmenubutton[\"menu\"]= menubutton.menu   \n  \nvar1 = IntVar() \nvar2 = IntVar() \nvar3 = IntVar() \n  \nmenubutton.menu.add_checkbutton(label = \"Mangoes\", \n                                variable = var1)   \nmenubutton.menu.add_checkbutton(label = \"Bananas\", \n                                variable = var2) \nmenubutton.menu.add_checkbutton(label = \"Apples\", \n                                variable = var3) \n    \nmenubutton.pack()\n\nroot.mainloop()\n```\n\nTo make use of these widgets, you definitely need to create a window. To create a gui window, the following syntax is used: \n\n```python\nfrom tkinter import * \n\nwindow = Tk()\n\n#------ widgets go here -----\n\nwindow.mainloop()\n```\n\nThe above code should create a small window when you run it. The `Tk()` creates the window while `.mainloop()` keeps it running and therefore, should be at the very last line of your program. \n\nYou can also customize your window with several attributes such as color, size, title, if resizable or not, padding, etc. For instance; \n\nTo make your window non-resizable and title, we use the syntax;\n\n```python\nfrom tkinter import *\n\nwindow = Tk()\n\n#------ set new title -------\nwindow.title(\"My GUI App\")\n\n#------ set to non-resizable -----\nwindow.resizable(0,0)\n\nwindow.mainloop()\n```\n\nHowever, to set other attributes such as padding and background, the method `window.config(options)` is called. \n\n## Setting Layout with Geometry Managers in Tkinter\n\nGeometry managers are also called Layout Managers. They organize and place widgets in specific positions on the GUI window. So without attaching them to widgets, all you get is an empty GUI window. There are 3 main geometry managers in Tkinter; \n\n* `pack()`\n* `grid()`\n* `place()`\n\n1. The `pack()` manager: \n\nThis is the simplest to use, in Tkinter. It is used to place widgets in Frames or windows from top to bottom or side by side. Although, with the `pack()`  manager, you’re limited to positioning images on either left, right, top or bottom.\n\nThe `pack()` manager has different attributes but the most common are: \n\n* `fill` : This accepts three values — `X`, `Y` and `BOTH` . These allow the widgets fill available space along the horizontal axis, vertical axis or both.\n* `side` : It specifies which side of the window to pack the widget to. These values accepted by this attribute are: `LEFT`, `RIGHT`, `TOP` and `BOTTOM`.\n* `expand` : This is used to allocate more space to a widget. It’s values are either `True` or `False` . With `False` as default, when the `expand` attribute is `True` , the widget expands to fill any extra space in the block where the widget exists.\n\n2. The `grid()` manager: \n\nThis is the best approach to laying out widgets on your GUI window. The `grid()` manager is used to split a window or frame into rows and columns that start with their index number as 0. \n\n***Img goes here***\n\nTo use the `grid()` manager, here are the attributes it is associated with: \n\n* `column` : This is used to specify the column number to which a widget belongs to.\n* `row` : It is used to specify what row the widget should be placed in.\n* `columnspan` : It is used to specify how many columns the widget is expanded to.\n* `rowspan` : Just like columnspan, it is used to specify how many rows the widget is expanded to.\n* `padx, pady`  : This is used to add padding to a widget **outside** its borders.\n* `ipadx, ipady`  : This is used to add padding **inside** its borders.\n* `sticky` : In cases where a cell is larger than a widget, this is used to specify the positioning of the widget inside the cell. This is done with the following values; N, E, W, S, NE, NW, ES, EW, ie — North, East, West, South, North East, North West, East South and East West.\n\n3. The `place()` manager: \n\nThis is used to place widgets in very specific positions using coordinates given by the programmer. Therefore, this manager uses (x, y) positions in pixels. \n\nFor instance, the (0, 0) coordinates represent the origin which is the top left corner of a Frame or window. The x coordinate represents the horizontal axis, and y represents the vertical axis. \n\nIt’s attributes include: \n\n* `x, y` : This specifies the coordinates for positioning the widget, measured in pixels.\n* `height, width` : This allows you specify the height and width of the widget in pixels.\n* `anchor` : It represents the exact position of the widget in its container. It’s default value is `NW` which is the upper left corner.\n* `bordermode` : With `INSIDE` as its default value, this indicates that the other options refer to the parent’s inside, ignoring the borders. It’s other value is `OUTSIDE` , which does the opposite.\n* `relx, rely` : This represents the horizontal and vertical positioning as a float between 0.0 and 1.0, as a fraction of the parent widget.\n* `relheight, relwidth`  : This is the height and width as a fraction of the parent widget, represented as a float between 0.0 and 1.0.\n\nTo avoid running into errors caused by layout managers, make use of only one of the three layout managers as it cannot be interchanged in the same python file.\n\n### **Conclusion**\n\nThere are several applications that can be built using Python and Tkinter as well as other GUI libraries. This article has highlighted the very basics of Tkinter to help you get started. \n\nI hope you enjoyed reading this tutorial and found it helpful. If you have any questions, feel free to leave them below in the comments and I’ll be happy to answer.","slug":"gui-programming-with-tkinter-in-python","tags":"Python, Tkinter","description":"Imagine our computers didn’t have GUIs and had to be operated using the command line. Seems tragic and mentally exhausting. GUIs are found on every operating system to aid communication between the user and the computer. Python provides various options for developing Graphical User Interfaces (GUIs). However, the most common ones include: \n\n*"},{"id":1623102107,"title":"Global and Local Scopes of Python Variables","timeZone":"2021-Jun-07T22:41:00","author":"Lulu Nwenyi","publishDate":"Jun 07, 2021","time":"22:41","thumbnail":null,"altText":null,"category":"Dev","subCategory":"Python","content":"\nAs you may or may not know; In python, a variable is created the moment you assign a value to it using the “=“ sign. Due to their scopes, Variables are classified into two main groups. \n\n### What is a scope?\n\nThe scope of a variable refers to the area where you can the variable from. In other words, it is the container holding a variable. \n\n### Types of Variables\n\nAs earlier mentioned, there are two types of variables; \n\n- Global Variable\n- Local Variable\n\n### Global Variables\n\nA Global Variable exists in a Global Scope. It can be reached and modified anywhere in a program, and all functions of a program exist in the Global Scope. Therefore, once you start writing a program or lines of code, every variable declared outside of a function is referred to as a Global Variable.\n\n```python\nusername = \"Lulu\"\ndef myFunction():\n    print (\"What can I call you?\") \n    name = input()\n    print (\"Hi, \" + name + \"!\")\n\nmyFunction()\nprint (\"Your username is \" + username)\n```\n\nIn this program above, the Global variable is “username” because it is outside the function. \n\n### Local Variables\n\nA Local Variable is nested in a function, and each function has its own Local Scope. A Local Scope is created once a function is called. The variables nested in this function are considered temporary because they don’t exist after the function returns a statement. \n\n```python\nusername = \"Lulu\" #global variable\ndef myFunction():\n    print (\"What can I call you?\") \n    name = input() #local variable\n    print (username)\n\nmyFunction()\nprint (\"Your username is \" + username)\n```\n\nHere, we’re calling the global variable (username) in the local scope with the print function. This program would run smoothly because the local scope can access global variables.\n\n## Differences between Global and Local Variables\n\n1. A global variable is declared outside a function while a local variable is declared inside the function. \n2. When the value of a global variable is modified in a function, the effect of change is visible all through the program unlike a local variable whereas change only has effect in the function it was declared in. \n3. The value of a local variable cannot be shared because it is only accessible in one function. However, the value of a global variable is accessible by multiple functions across the program. \n4. Local variables are created when a function starts and are lost when a function is terminated, while a Global Variable is created at the beginning of a program and ends when the program is terminated. \n\n## Advantages and Disadvantages of Using Global Variables\n\n### Advantages\n\n- You can access Global Variables from all functions or modules in a program.\n- No repetition is needed as you only need to declare a global variable once; outside the modules.\n- It is mainly used for storing constants to allow consistency and reuse.\n- A global variable allows multiple functions access the same data.\n\n### Disadvantages\n\n- Data can be easily altered by any function and any newly written statement in the program can change the value of the global variable.\n- If a global variable is subjected to change, you will need to change all modules where they are called.\n\n## Advantages and disadvantages of using Local Variables\n\n### Advantages\n\n- Local variables can have the same names in different functions because they are only recognized in the one they are declared in.\n- Using local variables ensures you that the values of variables will remain intact while the program is running.\n- In cases of bugs, refactoring codes is easier when local variables are used.\n\n### Disadvantages\n\n- Local variables are not reusable by other functions.\n\nEvery variable is either local or global and cannot be both. This shows that local and global variables are equally important in every program. However, declaring unwanted global variables should be avoided and to enhance the readability of your code, make use of local variables more.","slug":"global-and-local-scopes-of-python-variables","tags":"Python, Docker","description":"As you may or may not know; In python, a variable is created the moment you assign a value to it using the “=“ sign. Due to their scopes, Variables are classified into two main groups."},{"id":1618943352,"title":"How to Stay Productive Working from Home","timeZone":"2021-Apr-20T19:29:00","author":"Lulu Nwenyi","publishDate":"Apr 20, 2021","time":"19:29","thumbnail":null,"altText":null,"category":"Psych","subCategory":"Remote","content":"Due to the pandemonium, many companies –home and abroad, have resulted in working remotely. Managing this shift in how we collaborate and communicate while doing our work has been a challenge for employees.\n\nEven workers with experience in working remote still face a lot of challenges. Many parents have to juggle taking care of their kids and family while working, and for first-timers, this means figuring out how to be productive and remain focused in this environment.\n\nWith all the many responsibilities and tasks at home, working while juggling these responsibilities and still finding time for yourself can be challenging, especially if it’s your first time. However, having some productivity tricks in your daily routines can help you complete your tasks efficiently without messing with your sanity.\n\n### Tips to Increase Your Productivity at Home\n\n- **Create a dedicated workspace**\n\nOne of the best ways to separate your work and home life is by setting up a workspace. Ideally, this should be separate from your bedroom, but it could also be in your room if there is not enough space for a home office.\n\n- **Focus on your output**\n\nRather than focus on getting all your tasks done, focus on what the outcome of your tasks would mean. Productivity isn’t only about getting things done. It also involves doing them efficiently.\n\n- **Prep the night before**\n\nAfter the day’s work, sort out the to-do for the next day, starting with your uncompleted tasks. When you do this, you have a sense of direction on how your next day would be. Another kind of preparation you should engage in is mental preparation – Figuring out blockers and improvements.\n\n- **Work with priorities**\n\nWhat tasks need to be completed ASAP? Which can wait till tomorrow? You can make a to-do list and number items in order of importance. It will help you remain focused and committed to finishing your tasks for the day. However, you have to make sure they are realistic and achievable.\n\n- **Automate tasks if you can**\n\nThese days, we have a lot of technology that allows you to automate tasks. For instance, as a business or social content creator, you schedule the content for your profiles using technologies like Buffer and Tailwind. You can also schedule emails in different mail clients like Gmail.\n\n- **Avoid distractions**\n\nIf you have distractions such as your phone and social media around you, you tend to divert focus meant for getting tasks done. Your level of productivity when you allow distractions can drop by over 40%.\n\nOther tips you can use include avoiding multitasking, getting a to-do pad, taking breaks, and saving your energy.\n\n### **My top productivity strategy**\n\nMy level of productivity used to be low and dependent on a lot of things. Over time, I started to find solutions and ways to increase my productivity. The first step I took was setting up my workspace in my room.\n\nI got a table, an office chair and being a stationery person – a few stationery supplies. Then I started using my journal to create daily to-do lists and track how productive I was each day. Doing this every day helped me to look forward to being better the next day. I also broke tasks into smaller bits, and it helped me be more realistic with how much I could do in a day.\n\nAnother good trick that helped was my journaling. Every morning I sort out my daily activities – Highlighting my tasks and priorities, and taking notes when I needed to in my journal. I also began to do constant self-reviews each day to sort my finished and unfinished tasks.\n\nBy practising these tips and making them habits, you create a system that helps your productivity, not just for work but in your everyday life.","slug":"how-to-stay-productive-working-from-home","tags":"Productivity, Remote ","description":"Due to the pandemonium, many companies –home and abroad, have resulted in working remotely. Managing this shift in how we collaborate and communicate while doing our work has been a challenge for employees.\n\nEven workers with experience in working remote still face a lot of challenges. Many parents have to juggle taking care of their kids and family while working, and for first-timers, this means figuring out how to be productive and remain focused in this environment."},{"id":1618166068,"title":"10 Bad Habits That Mess With Your Creativity","timeZone":"2021-Apr-11T19:34:00","author":"Lulu Nwenyi","publishDate":"Apr 11, 2021","time":"19:34","thumbnail":null,"altText":null,"category":"Psych","subCategory":"Productivity","content":"Many people believe that people are born with creativity, but is this true?\n\nEvery person can be creative, and it is your role as a human to nurture it — because the world needs it. Creative people possess certain skills. They are always making creative solutions to problems — no matter how little, and most times, these solutions exhibit playfulness.\n\n> You can't use up creativity. The more you use, the more you have. - Maya Angelou\n> \n\nWhen you engage in certain bad habits, your creativity starts to drop until there’s none left. Here are a few habits that draw you away from your creativity:\n\n**1. Comparing yourself with others**\n\nComparison is one of the easiest ways to destroy your confidence. To create effective solutions to problems, you have to be confident in yourself. When you compare yourself or your work to others, it leaves a dent in your self-confidence and can cause you to have a creative block.\n\n**2. Avoiding failure**\n\nLife is about taking risks. Nobody wants to make mistakes or fail, but if you try too hard to avoid failure, you might also be avoiding success. People say that to be successful, you should aim to make mistakes because you are most likely to learn from them. So, take a chance and succeed today.\n\n**3. Taking criticism personally**\n\nFeedback and criticism are good, as long as you don’t take it personally. If you fear criticism, you fear growth because we improve by getting feedback from others. Sometimes, the criticism might come off as a form of attack or discouragement — especially if it’s not constructive, but you have to take the main points and improve with the feedback.\n\n**4. Trapping yourself in false limits**\n\nLimiting yourself is a form of self-sabotage. You have to look past what you already know and be open to new ideas. When you step out of your comfort zone, you just might get your breakthrough idea.\n\n**5. Fear of uncertainty**\n\nMost times, we want to only do things that make complete sense. Creativity requires the mindset to let go of uncertainty because fearlessness allows your creativity to flow. Therefore, you need to let go of the fear of being wrong.\n\n**6. Information overload**\n\nThis is also called Analysis Paralysis. You have to know when to stop collecting information and start taking action. Analysis paralysis causes the inability to make decisions because you have too much information. As a creative person, overthinking is one of your greatest enemies.\n\n**7. Premature judgement**\n\nAs a creative, you have to allow yourself to generate and iterate on ideas, without judgment. If you judge too early, you might create less and keep making second guesses. So after generating and iterating, you can select and smoothen the best.\n\n**8. The Expert Syndrome**\n\nThis is originally called the Dunning-Kruger Effect. In many industries these days, many people — including people who are not, claim to be experts.\n\nThere is no problem in listening to secrets of success by experts. Where the problem lies is in the listener not asking questions.A lot of successful people did things they were told would not work. Therefore, rather than digest what you’re being told by gurus, always remind yourself that there are different paths to success.\n\n**9. Allowing discouragements**\n\nYou should know that not everyone around you will support your ideas. Therefore, you have to learn to ignore the different approaches to discourage you from doing what you want.\n\n**10. Self-doubt and lack of confidence**\n\nFearlessness is a powerful tool for creatives and the best way to create is first connecting with your self. When lack of confidence becomes overwhelming or long-lasting, it might cost you your ability. So, to be creative, you need to have confidence in yourself.\n\nTo improve your level of creativity, you need to get rid of these habits and replace them with more beneficial habits that assist in improving the spark between you and your creativity.","slug":"10-bad-habits-that-mess-with-your-creativity","tags":"Creativity, Productivity","description":"Many people believe that people are born with creativity, but is this true?\n\nEvery person can be creative, and it is your role as a human to nurture it — because the world needs it. Creative people possess certain skills. They are always making creative solutions to problems — no matter how little, and most times, these solutions exhibit playfulness."},{"id":1617390940,"title":"How design influences your life as a designer","timeZone":"2021-Apr-02T20:15:00","author":"Lulu Nwenyi","publishDate":"Apr 02, 2021","time":"20:15","thumbnail":null,"altText":null,"category":"Design","subCategory":"UI&UX","content":"On most days, I pick my outfits based on my mood. This means that sometimes if you see me putting on black, I just might feel dark on the inside. The reason is I’ve gotten to understand and practice the concepts of colour usage to the extent where I use them in my personal life. \n\nA lot of people do things without reflecting on the impacts. It is said that somehow, everything you do — good or bad, leaves an impact on your life or personality. Everything, including design. As a designer, tracking your progress should not be just about improving your interface design. Having a solid understanding of design needs to be involved to create better experiences. \n\nDesign thinking is human-centred. You have to understand the problems and needs of your users to provide standard and efficient solutions for them. When you repeatedly engage yourself in this process, it leaves an impact on you and you begin to practice this method in other parts of your life. As designers, we are influenced by design because it’s part of our role to think like our users.\n\nI had a chat with a designer — [Emmanuel Adigwe](http://www.Twitter.com/EmmanuelCAdigwe), and he mentioned that one of the ways design has influenced his lifestyle is practising empathy. As designers, we should be able to see from other points of view and not make assumptions. Emma has also applied this in his interpersonal relationships. He tries to wear their lenses, to understand their problems, and find the best possible ways to solve them. This has also helped him become a better listener in decision making, conflicts, and other situations he encounters. \n\nAsides being empathetic, Emma has also become passionate about accessibility. Recall that as designers, our main role is problem-solving. Therefore, our solutions should be suitable for everyone. Design has helped him see disability from a different view. He has gotten to understand that disability is not necessarily a permanent situation. For instance, a person driving in heavy rainfall and finding it hard to see can be interpreted as being disabled for that moment. He worked on a prison support project with an NGO, while in the university. The team had interpretations – which were drawn from assumptions of what the prisoners would need. They introduced craftsmanship to them yet they didn’t get a positive response rate. Emma believes if he knew then, what he knows and has learnt now from design, they would have taken a better approach in creating a solution that would work.\n\nDesign makes us understand that to make solutions for people, you have to understand them. Test the solutions with them, get feedback and work with the feedback you’ve gotten to get better results. This means your whole design process can be implemented in your lifestyle and daily activities. \n\nAfter having a chat with another friend – [Charles Njoku](http://www.Twitter.com/madebycharles), I realized that design also makes us understand other beliefs. Charles explained that as a designer, he has learnt to understand that situations and experiences make people and forms the foundation of their characters, habits, and beliefs. So, when creating a solution for these people, the characters and beliefs are important case studies to ensure your solution is suitable for them. In design thinking, this is the second phase, the Define phase, of the process. \n\nYour progress as a designer would mostly reflect in your personal life. Apart from improving on user interfaces, to be a better designer, you have to improve your design thinking.\n\n### My Top Reads on —\n\n**User Accessibility** \n\n- [https://uxdesign.cc/accessibility-guidelines-for-a-ux-designer-c3ba775539be](https://uxdesign.cc/accessibility-guidelines-for-a-ux-designer-c3ba775539be)\n- [https://link.medium.com/Q3vS9nx36eb](https://link.medium.com/Q3vS9nx36eb)\n- [https://www.interaction-design.org/literature/topics/accessibility](https://www.interaction-design.org/literature/topics/accessibility)\n\n**Empathy**\n\n- [https://careerfoundry.com/en/blog/ux-design/what-is-empathy-in-design-thinking/](https://careerfoundry.com/en/blog/ux-design/what-is-empathy-in-design-thinking/)\n\n**Design Thinking** \n\n- [https://www.interaction-design.org/literature/article/what-is-design-thinking-and-why-is-it-so-popular](https://www.interaction-design.org/literature/article/what-is-design-thinking-and-why-is-it-so-popular)\n- [https://www.interaction-design.org/literature/article/5-stages-in-the-design-thinking-process](https://www.interaction-design.org/literature/article/5-stages-in-the-design-thinking-process)\n- [https://www.invisionapp.com/inside-design/what-is-design-thinking/](https://www.invisionapp.com/inside-design/what-is-design-thinking/)","slug":"how-design-influences-your-life-as-a-designer","tags":"Design, Life","description":"On most days, I pick my outfits based on my mood. This means that sometimes if you see me putting on black, I just might feel dark on the inside. The reason is I’ve gotten to understand and practice the concepts of colour usage to the extent where I use them in my personal life."},{"id":1616010339,"title":"Battling emotional demons","timeZone":"2021-Mar-17T20:45:00","author":"Lulu Nwenyi","publishDate":"Mar 17, 2021","time":"20:45","thumbnail":"https://miro.medium.com/max/1280/1*q5m26XjRdRVPoUc-2FdJ3g.jpeg","altText":null,"category":"Psych","subCategory":"Emotions","content":"Christians often say that battles are for the Lord to fight. However, the Bible also says “If any would not work, neither should he eat”, which simply means Heaven helps those who help themselves.\n\nEvery person gets to fight some kind of demon. In movies and myths, they often represent demons as ugly looking creatures, with the aim to cause affliction and pain on its target and whoever gets in its way.\n\nAbstract feelings can also be demons. Not all demons come in ugly forms. The movies also sometimes, represents them as shapeshifters. Identifying and slaying these demons become harder, because the target, in most cases, have connections with their other forms.\n\n> _“_Everyone has their demons; everyone has their challenges.” — Isaac Hanson\n\nRelating these demons to our everyday lives — At some point, life comes at us in terrible ways that have us fighting hard for our freedom. It gets even worse when we realize we have no strength in us to fight.\n\nWe see many cases of sudden deaths and suicide because they believe to have suffered enough. They feel there is no more strength left. Sadly, they might not have realized that the strength comes from within.\n\nFinding your inner strength is not easy. We’re often left with the impression that we can make things easy for ourselves. Fortunately, that’s not a belief I succumb to. You don’t make things easier. You only become familiar with the struggle and the steps to overcome them.\n\nTo channel your inner strength to fight and find peace after battle, here are a few things I do that you can try;\n\n-   **Cry**\n\nFor me, crying has become very therapeutic. You know, sometimes, when you fall down, you stand up and laugh about it and keep going. That’s how it is when I cry. After crying, I laugh and remind myself that it’s going to be okay and the ko most questionable part is how I get right back to work almost immediately, like nothing happened.\n\n-   **Take a break**\n\nFrom emotional stress, of course! Nobody enjoys being stressed. So, when these hard times come, take a break from every and any-thing that stresses you mentally.\n\n-   **Keep a journal**\n\nWriting my feelings helps me understand them. I also get the clarity I need in the midst of journaling which I believe to be a very therapeutic exercise to improve one’s life. It helps you be more intentional about becoming a better person.\n\n-   **Therapy**\n\nThis might not be effective for everyone, but it is worth trying. Talking to someone, in most cases, helps you feel better and a talking to a professional makes experience even better. Talking to someone helps you identify these demons, how they’re attacking and why you’re a target.\n\n-   **Mindfulness**\n\nYou have to Focus on the present. Meditation, short breaks, yoga, sports are friendly approaches to practicing mindfulness. Being mindful helps reduce stress, gain awareness and insights on our minds by observation, improves your performance and makes us pay attention to other parts of our well-being.\n\n-   **Love**\n\n> Overcome the demons with a thing called love.” — Bob Marley\n\nExperiencing love is such a beautiful feeling. It’s so much prettier when it’s from yourself. The level of confidence you get to reach and how much care you show yourself because of love. Find love, in yourself and see how much it improves your general routine and well-being.\n\nEmotional strength helps us break free from our emotional demons. In channeling your inner strength, you find coping strategies that work for you.\n\nCoping strategies shouldn’t be inflicting pain on yourself. Letting that happen means assisting the demon we are fighting. One of the best coping strategies I have practiced is letting go of negative thoughts and replacing them with positive ones. You also have to set goals and form habits to reach these goals. Reducing stress, workload, resting, exercise, good sleeping and eating habits are very efficient coping mechanisms.\n\nAre you fighting some kind of demon? I’ll leave you with a note from a fellow fighter;\n\n_Dear friend,_\n\n_I know that no one really understands what you’re going through. Nobody really gets what you’re feeling and how badly it hurts. You may not want to tell anybody because you cannot put into words what it is you feel but hey! I want you to help you feel better. I know, that it’s difficult, but you’re gonna get through it, no matter what it takes._\n\n> “We must all face our demons sooner or later.” _— Matt Abrams_","slug":"battling-emotional-demons","tags":"Emotion","description":"Christians often say that battles are for the Lord to fight. However, the Bible also says “If any would not work, neither should he eat”, which simply means Heaven helps those who help themselves.\nEvery person gets to fight some kind of demon. In movies and myths, they often represent demons as ugly looking creatures, with the aim to cause affliction and pain on its target and whoever gets in its way."},{"id":1613072838,"title":"How to make money as a junior designer or developer","timeZone":"2021-Feb-11T20:47:00","author":"Lulu Nwenyi","publishDate":"Feb 11, 2021","time":"20:47","thumbnail":null,"altText":null,"category":"Design","subCategory":"UI UX","content":"One of the major struggles junior designers and developers tend to experience, is getting a job. Most of the time, it becomes a worry and makes you start question your abilities.\n\nThere are a lot of other skills that you could earn from while applying to land your dream job. These skills become useful in a wide range of cases in the future and even adds to work experience in your resume. Here are a few of them;\n\n**1. Wordpress**\n\n[Wordpress](https://wordpress.org/) is a Content Management System (CMS) platform used to create different kinds of websites. Many companies use Wordpress for their websites, because it’s easy to manage.\n\nSince Wordpress requires little or no code, as a designer or even a developer, you can use Wordpress to build websites, and get paid for it. You can even have extra monthly costs for maintenance; depending on preference.\n\n**2. Webflow**\n\n[Webflow](https://webflow.com/) is another platform that doesn't require code blocks in creating websites. In recent times, the demand for webflow has increased, as it has the power to provide the code as you make use of its drag and drop builder. This is another great skill you can use to make money, either as a designer or developer.\n\n**3. Graphic Templates**\n\nOne of the most common ways to make these templates is [Canva](https://www.canva.com/) . With Canva, you can create social media posters, flyers, logos, presentations, card designs, highlight covers, and many more. Most of the time, small business owners employ people to create or personalize ready-made templates for them. If you have a good eye for design, you can also create premium templates for sale too.\n\nAsides Canva, there are other apps like Adobe Spark and Over.\n\n**4. Writing**\n\nWriting is another amazing way to make money as a person in  tech. Asides from making money, it’s also a good way to learn and grow your audience. Sites like [SmashingMagazine](https://www.smashingmagazine.com/) , [Auth0](https://auth0.com/) , [Twilio](https://go.twilio.com/) , [WPHub](https://www.wphub.com/write-for-us/) and more, pay individuals to write technical articles for them.\n\nAs a writer, you can share your articles on Hashnode, and earn from it using web monetization with [Coil](https://coil.com/) .\n\nEarning money as a junior is not limited to these, but if you decide to start making money with an extra skill, you can choose any of these. There are so many available gigs on sites like Fiverr and Upwork, for you hop on, now.","slug":"how-to-make-money-as-a-junior-designer-or-developer","tags":"Design, Developer, Money","description":"One of the major struggles junior designers and developers tend to experience, is getting a job. Most of the time, it becomes a worry and makes you start question your abilities.\nThere are a lot of other skills that you could earn from while applying to land your dream job. These skills become useful in a wide range of cases in the future and even adds to work experience in your resume. Here are a few of them;"},{"id":1609791508,"title":"Why you should conduct User Research","timeZone":"2021-Jan-04T21:18:00","author":"Lulu Nwenyi","publishDate":"Jan 04, 2021","time":"21:18","thumbnail":null,"altText":null,"category":"Design","subCategory":"UX Research","content":"To design user-oriented products, it’s important that you carry out research. User Research is a method used to understand the behaviors, needs and pain points of your users.\n\nResearch is mainly classified into qualitative and quantitative. There are different methods of conducting research, and they can be put under these two categories.\n\nQualitative research involves collecting data to understand opinions and experiences while Quantitative research is numerical statistics used to study patterns, calculate averages, make predictions and make general results in reference to wide population counts.\n\nAs a designer, analyzing user research is a top skill you should have to create effective designs. There are many reasons you shouldn’t skip this phase in your design process, such as:\n\n**1. To understand your users**\n\nWhen designing, it’s best to keep in mind that you are not your user. This prevents you from making assumptions that might not work. Involving your users allows you create better experience in your design.\n\n**2. To save time and avoid rework**\n\nYou don’t want to have to redo your design because it doesn’t have good user experience. To prevent this from happening, you should conduct research, and use its analysis to create your user-centered design. It saves you and your team from stress.\n\n**3. Design better products**\n\nEvery product has its main aim, to create an efficient service and product that people want to use. To achieve this aim, it’s your duty create user centered designs while making use of user research analysis.\n\n**4. To Improve usefulness**\n\nIrrelevant elements in design contributes to bad user experience. Therefore, it is important to make use of research analysis to ensure features and elements in your design are useful.\n\n**5. To ensure it is easily usable**\n\nAs the designer of a product, you understand your design but does the user understand? Every product should be easy to use. User testing is a very effective method in finding out the level of usability of your product. It is important to know if your users understand the functionality of your design or product, so as to make users have good experience with your product.\n\nResearch, most time is assumed to be unnecessary by designers and sometimes, even clients. It is very important to not skip this phase in your design process as it makes your work easier while creating a user-centered design or product.","slug":"why-you-should-conduct-user-research","tags":"UX Research","description":"To design user-oriented products, it’s important that you carry out research. User Research is a method used to understand the behaviors, needs and pain points of your users.\nResearch is mainly classified into qualitative and quantitative. There are different methods of conducting research, and they can be put under these two categories."},{"id":1606247778,"title":"How To Overcome Writer's Block","timeZone":"2020-Nov-24T20:56:00","author":"Lulu Nwenyi","publishDate":"Nov 24, 2020","time":"20:56","thumbnail":null,"altText":null,"category":"Psych","subCategory":"Writing","content":"Writing is one of the most creative things to do and all authors and even individuals in other fields of creative work, experience that period when they’re not exactly being productive.\n\nWriter’s block is a condition in which an author experiences a slowdown or inability to be creative or produce new work.\n\nSome authors have been made to believe that writer’s block is caused by lack of skill and commitment. This belief only leaves a bad result on your confidence and esteem, as it is not true.\n\nThere are so many known causes of writer’s block. Here’s a few,\n\n**1. Lack of inspiration**\n\nMany a times, writers need to be inspired to be productive. Finding your inspiration as a writer, is important. You could be inspired by people, videos, songs, podcasts, money, the Bible, the Quran, tweets, Pinterest and even random pages you search on google.\n\nFrom experience, when you lack inspiration, it feels like you’re in an empty room or lost and trying to be found. It’s best to find what inspires you at the start of your career as a writer.\n\n**2. Self doubt**\n\nIt’s completely normal to experience self doubt sometimes. Every creative goes through this. However, when it becomes regular, it turns a problem.\n\nImpostor’s syndrome is a psychological problem that makes a person feel incompetent and inadequate, despite all proof that he is skilled or accomplished. This creates a fear of being seen as a fraud in your field of work.\n\nIf allowed to grow, impostor’s syndrome reduces your level of productivity as writer, till you completely stop writing.\n\n**3. Fear**\n\nFear is one of major causes of self doubt which leads to writer’s block. Most times, we are afraid of putting our work out because they don’t seem so good to us. We are afraid of being backlashed as a bad writer by readers and even other writers.\n\nFear, when entertained, causes writers to lose confidence in their work and even themselves.\n\n**4. Pressure**\n\nTake it easy. Pressure from work, friends and life entirely could be tiring. Nonetheless, we shouldn’t allow this stop us from doing what we do. Pressure most times leads to both physical and mental stress, which could cause a writer to retire completely.\n\n**5. Criticism**\n\nCriticism is known to mess with the self esteem and confidence of a person, a lot of times. When criticism is badly delivered, it causes a feeling of hurt and reduces how you feel about what was criticized. Still, you have to learn to accept constructive criticism and believe in yourself as no one is perfect. Also, remember that not everyone would like your work.\n\n**How to overcome writer’s block**\n\nDealing with writer’s block, is not an easy thing to do. However, it can definitely be dealt with.\n\n• To start with, find your inspiration. Get that person, thing or topic that inspires you to do better and write more. So, when the block happens, you know how to get inspired easily.\n\n• When in self doubt, take a self assessment test. Ask yourself positive questions. What you’ve accomplished and how you accomplished them. This would help you realize your positive sides and rise back on your feet as a writer.\n\n• Talk to someone when you’re feeling down. Sometimes, you need someone who can talk to you into motivation. I would definitely recommend you talk to a friend or loved one.\n\n• When you feel pressured, take a break. Relax from what you can and take self care into action. In the process, you would definitely regain the strength to write.\n\n• Believe in yourself and have confidence in your works.\n\n• Never compare yourself to others. Doing so would only hurt your self esteem\n\n• Learn to accept constructive criticism; Acknowledge that not everyone would like your work and wrongly delivered criticism should not change your views on your work.\n\n• Remind yourself, constantly, of how amazing a writer you are.\n\nWriter’s Block could take a short time or might even be for a long period of time. You should start working on it immediately you begin to experience it because the longer it takes, the deeper it gets.\n\nAlways believe in yourself and remember that you a great writer.","slug":"how-to-overcome-writers-block","tags":"Writing","description":"Writing is one of the most creative things to do and all authors and even individuals in other fields of creative work, experience that period when they’re not exactly being productive.\nWriter’s block is a condition in which an author experiences a slowdown or inability to be creative or produce new work."},{"id":1606161603,"title":"Importance of Wireframing","timeZone":"2020-Nov-23T21:00:00","author":"Lulu Nwenyi","publishDate":"Nov 23, 2020","time":"21:00","thumbnail":null,"altText":null,"category":"Design","subCategory":"UI&UX","content":"#### What is Wireframing?\n\nWireframing is the skeletal framework of which your design is built around. Imagine your design as your body and your wireframe as your skeleton or your design as a house you want to build and your wireframe as it’s blueprint. It’s that simple.\n\nIt is the basic outline of elements and features of your design made by freehand sketches and by the use of digital tools.\n\n##### Why are wireframes important in the design process?\n\n• It gives you a clearer visual of what you need in your design. It helps you decide where and how to place your page elements.\n\n• It creates room to explore ideas and experiment as much as you need to.\n\n• It ensures clarity in communication between you and your clients.\n\nNow that you know the basics of wireframing, how do you know what to do and what not to? Let’s find out.\n\n##### Things to Do\n\n1.  Conduct your research before you start mapping out your ideas.\n    \n2.  Be free to develop as many ideas as you think is possible.\n    \n3.  Keep your wireframes simple: they are just outlines.\n    \n4.  Make sure your wireframes are clear and understandable.\n    \n5.  Involve people. Your friends, coworkers, even clients are most likely the users. Mind mapping with people would definitely be to your advantage.\n    \n\n#### What to avoid\n\n1.  Don’t show too much details. Wireframing should be plain outlines of your ideas. You don’t need to include the content of your design.\n    \n2.  Avoid starting with a digital tool. It’s best to start by sketching your ideas whenever they come in.\n    \n3.  Your wireframe shouldn’t include color, images nor logo. Working with a grayscale wireframe helps maintain focus. Only include color for highlights.\n    \n4.  Make sure to try different options. When you choose a solid layout you want to build your design on, then proceed to making the digital wireframe.\n    \n\nWireframing is one essential skill every designer ought to know. For beginners, it’s important to learn and perfect this skill as you would need it in your design process.\n\nLastly, always remember to sketch out your ideas whenever they come to you!","slug":"importance-of-wireframing","tags":"Wireframing","description":"Wireframing is the skeletal framework of which your design is built around. Imagine your design as your body and your wireframe as your skeleton or your design as a house you want to build and your wireframe as it’s blueprint. It’s that simple."},{"id":1605470649,"title":"Must-Have Figma Plugins for Every Designer","timeZone":"2020-Nov-15T21:04:00","author":"Lulu Nwenyi","publishDate":"Nov 15, 2020","time":"21:04","thumbnail":null,"altText":null,"category":"Design","subCategory":"UI&UX","content":"Plugins are third-party scripts that add to the functionality of an application. They’re just like the applications on your phone. You have to install to use them in your design tool. Plugins are the one of the best things that happened to figma. With plugins, designing is smoother and even seamless.\n\nWhen I started designing, I had no idea what plugins were. Designing felt so stressful and was mentally tiring. A lot of design beginners don’t know about plugins and how useful they are.\n\nThere are plugins that every designer should have. These plugins add to the functionality of your design and make work easier for you.\n\nHere’s a list of them\n\n**1. Iconify**\n\nThis plugin is known to have 5000+ icons and emojis. Iconify imports these icons in svg format to your design without having to go to the website, giving full edit access to its user.\n\n![iconify.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605295614146/y9yPUE_5Z.jpeg?auto=compress,format&format=webp)\n\n**2. Unsplash**\n\nUnsplash is a website that provides high-resolution free images. Using the plugin saves you the stress of going to the website to download those images. They give free access to the public usage of these images as long as you don't claim ownership to them.\n\n![unsplashh.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605295639610/7b6TmrKzs.jpeg?auto=compress,format&format=webp)\n\n**3. Content Reel**\n\nThis plugin import readymade content, such as avatars, texts, phone numbers, locations and more, into your design.\n\n![content reel.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605295655412/q4zbmVrRS.jpeg?auto=compress,format&format=webp)\n\n**4. Mapsicle**\n\nWhen you need to put a map in your design, all you need is the mapsicle plugin. It lets you create a map and puts it in your design.\n\n![mapsicle.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605296170918/PJQQT1JrR.jpeg?auto=compress,format&format=webp)\n\n**5. Wirebox**\n\nWirebox is a used to create wireframes of your design. It simply duplicates your design as a wireframe.\n\n![wire.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605296128495/O_7RxZxES.jpeg?auto=compress,format&format=webp)\n\n\n\n**6. Stories by Freepik**\n\nFreepik is a widely known image and vector art resource. Freepik recently created an extension, [stories.freepik.com](http://stories.freepik.com/), for amazing illustrations. This plugin imports your chosen illustration in svg format which allows you to edit it’s contents.\n\n![unsplash.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605295807323/P8iOOqPar.jpeg?auto=compress,format&format=webp)\n\n**7. Lorem Ipsum**\n\nThis is most widely used dummy text. When you lack content or you’re not ready to put in your content, it’s best to use Lorem Ipsum text.\n\n![lorem ip.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605296026173/J-TqnaHAl.jpeg?auto=compress,format&format=webp)\n\n**8. Palette**\n\nThis plugin is used to simply generate and select color palettes inside your figma file.\n\n![palette.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605296042494/zzf1sd3hY.jpeg?auto=compress,format&format=webp)\n\n**9. Charts**\n\nWhen your design requires a chart, this plugin makes it easy for you. You choose the specifications of your chart and import to your file.\n\n![charts.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605296061928/BCjpU_FTA.jpeg?auto=compress,format&format=webp)\n\n**10. Find and Replace**\n\nThe Ctrl+F command only works for frames on figma. To quickly change texts on figma, it’s best to use the find and replace plugin.\n\n![find and replace.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605296075772/LRNOrek74.jpeg?auto=compress,format&format=webp)\n\n**11. Mockuups Studio**\n\nWhen presenting your work and sharing on platforms, it’s best to use mockups to give an idea of how it would look like on devices.\n\n![mockuuups.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605296106306/JdiyIFQHF.jpeg?auto=compress,format&format=webp)\n\nInstalling these plugins are fast and as easy as using them. There are thousands of plugins on figma to use and explore. I advice you start exploring them now.","slug":"must-have-figma-plugins-for-every-designer","tags":"Figma, Plugin","description":"Plugins are third-party scripts that add to the functionality of an application. They’re just like the applications on your phone. You have to install to use them in your design tool. Plugins are the one of the best things that happened to figma. With plugins, designing is smoother and even seamless."},{"id":1605125258,"title":"The UX Beginner's Journey","timeZone":"2020-Nov-11T21:07:00","author":"Lulu Nwenyi","publishDate":"Nov 11, 2020","time":"21:07","thumbnail":null,"altText":null,"category":"Design","subCategory":"UX Research","content":"The UX Design journey is a very interesting and tough one, but they do say these times never last. Starting out in the design industry requires a lot of hard work and in-depth research which turns out to be something most beginners skip.\n\nUser Interface is like a joke and If you have to explain it, it's not that good. No designer wants their work to seem like one that would cause strain to the user.\n\nHere are a few things you should know as a beginner.\n\n**1. Plan your layout before designing.**\n\nPlanning your layout gives your design a good foundation. Where you start and what you need on your project becomes clearer to you, your team and the client. The screens and navigation process needed on your design are clarified making your work even easier.\n\nRemember, great user flow equals better user experience. Freehand sketches are used in making user flow diagrams and wireframes, before using digital wire-framing tools. It’s best to include digital wireframes in your presentation to clients, for clarity.\n\n![sigmund-4UGmm3WRUoQ-unsplash.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605126636344/-KlVFw-hw.jpeg?auto=compress,format&format=webp)\n\n**2. Make everything the user needs readily accessible.**\n\nNavigating through your design should not be stressful for users. It is very important for the key elements in your designs to be conspicuous. Failure in this would lead to users losing interest. Take the back button for instance. It’s easier to navigate through a product catalogue with the back and forward button. Users are able to go through different screens and also move away from them without hassle.\n\n**3. Your designs should give users feedback.**\n\nYour design should respond to actions. Users expect to see something happen when they click a button. Let them always know what's happening. You can use icons, popups, progress bars, and even timers to do this. Just ensure it gives your user feedback!\n\n![joshua-hoehne-k8OicEBr-3g-unsplash.jpg](https://cdn.hashnode.com/res/hashnode/image/upload/v1605126668867/XiLeff2A1.jpeg?auto=compress,format&format=webp)\n\n**4. Be Consistent.**\n\nDo not sacrifice the satisfaction of the users for beauty. User Interface should look great but not at the expense of consistency.\n\nYour fonts, icons, and designs on various pages should be consistent in size, thickness, and color.\n\nAlso, ensure that your UI is proper for the supposed platform. Mobile and desktop views have their differences. For instance, the hamburger menu for the mobile view of a website.\n\n**5. Be clear and simple.**\n\nUsers should know what to do at all times when using your product. There shouldn't be any confusion about the purpose of a page or its element. The best way to achieve this is by moving from one step to another on different pages. This applies to forms too.\n\nAllow forms to be as simple as they can and only seek important information on forms to achieve clarity and simplicity. 💡 Shorter forms make better forms. If you need to ask over 6 questions in a form, introduce a button that leads the first, to another page with a shorter form.\n\nThe basis of a good UI design involves making the User's experience pleasurable enough to want more of that product. Always let something inspire your design., also conduct adequate and essential research for your projects. Plan properly and effectively. Apply these tips appropriately and watch the beauty of your design unfold!","slug":"the-ux-beginners-journey","tags":"UX Research","description":"The UX Design journey is a very interesting and tough one, but they do say these times never last. Starting out in the design industry requires a lot of hard work and in-depth research which turns out to be something most beginners skip."}]